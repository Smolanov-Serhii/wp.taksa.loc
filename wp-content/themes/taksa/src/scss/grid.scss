/* ========== GRID ========== */
@media all and (max-width: 360px) {
  :root {
    --media-breakdown: 360 * 100vw;
  }
}

@media all and (min-width: 360px) {
  :root {
    --media-breakdown: 360 * 100vw;
  }
}

@media all and (min-width: 480px) {
  :root {
    --media-breakdown: 568 * 100vw;
  }
}

@media all and (min-width: 568px) {
  :root {
    --media-breakdown: 768 * 100vw;
  }
}

@media all and (min-width: 768px) {
  :root {
    --media-breakdown: 992 * 100vw;
  }
}

@media all and (min-width: 992px) {
  :root {
    --media-breakdown: 1440 * 100vw;
  }
}

@media all and (min-width: 1440px) {
  :root {
    --media-breakdown: 1920 * 100vw;
  }
}

@media all and (min-width: 1580px) {
  :root {
    --media-breakdown: 1920 * 100vw;
  }
}

@function px($value) {
  $result: calc(#{$value} / var(--media-breakdown));

  @return $result;
}

// media query mixin
@mixin break($size) {
  @media (min-width: map-get($breakpoints, $size)) {
    @content;
  }
}

//.row {
//  display: flex;
//  flex-flow: row wrap;
//  margin-right: px(-$mar);
//  margin-left: px(-$mar);
//}

// grid item
//[class^='col-'],
//[class*=' col-'] {
//  flex: 0 0 100%;
//  max-width: 100%;
//  padding-right: px($mar);
//  padding-left: px($mar);
//}

// loop over the breakpoints
@each $key, $value in $breakpoints {
  @for $i from 1 through $items {
    .col-#{$key}-#{$i} {
      @include break($key) {
        flex: 0 0 #{calc($i / $items) * 100%};
        max-width: #{calc($i / $items) * 100%};
      }
    }
  }
}

// grid helpers
.d-flex {
  display: flex;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.flex-nowrap {
  flex-wrap: nowrap !important;
}

.flex-column {
  flex-direction: column;
}

.align-items-center {
  align-items: center;
}

.align-items-start {
  align-items: flex-start;
}

.align-items-end {
  align-items: flex-end;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-end {
  justify-content: flex-end;
}

.align-items-md-end {
  @include respond-above(md) {
    justify-content: flex-end;
  }
}

.justify-content-start {
  justify-content: flex-start;
}

.justify-content-between {
  justify-content: space-between;
}

.gap-1 {
  gap: 0.5rem;
}

.gap-2 {
  gap: 1rem;
}

.flex-auto {
  flex: 1 1 auto;
}